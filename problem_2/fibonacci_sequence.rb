# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.
require 'pry'

class Fibonacci

	def initialize
		@starting_terms = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
	end

	def get_sum_of_last_two_values_in_an_array
		values = @starting_terms.last(2)
		@starting_terms.push(values[0] + values[1])
	end

	def values_can_not_exceed_4_million
		sum_of_evens = 0
		while @starting_terms.last < 4000001
			get_sum_of_last_two_values_in_an_array
			if @starting_terms.last > 4000000
				@starting_terms.each do |n|
					sum_of_the_even_numbers
				end
			end
		end
		puts sum_of_evens
	end

	def sum_of_the_even_numbers
		if n % 2 == 0
			sum_of_evens = sum_of_evens + n
		end
	end
end

fib = Fibonacci.new
puts fib.values_can_not_exceed_4_million