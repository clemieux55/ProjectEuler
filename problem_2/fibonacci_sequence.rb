# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.
require 'pry'

class Fibonacci

	def fibbonacci_sequence_collection
		fibb_numbers = [1,2]
		while fibb_numbers.last <= 4000000
			fibb_numbers << fibb_numbers.last(2).inject{|sum,x| sum + x}
		end
		if fibb_numbers.last > 4000000
			fibb_numbers.pop
		end
		addition_of_even_numbers(fibb_numbers)
	end

	private
	def addition_of_even_numbers(numbers_array)
			sum = 0
			numbers_array.each do |number|
			if number.even? 
				sum += number
			end
		end
		sum
	end
end

puts Fibonacci.new.fibbonacci_sequence_collection